name: Monthly CSV Aggregation

on:
  schedule:
    - cron: '0 0 1 * *'  # Uruchamiany 1-go dnia miesiąca o 00:00 UTC
  workflow_dispatch:

jobs:
  aggregate:
    runs-on: ubuntu-latest
    steps:
      - name: Pobierz repozytorium
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Pobiera całe repozytorium

      - name: Pobierz branch `data-archive`
        run: |
          git fetch origin data-archive
          git checkout origin/data-archive -- data
          git checkout origin/main -- aggregate.py visualization.py

      - name: Sprawdzenie zawartości katalogu
        run: ls -R

      - name: Zainstaluj pandas i inne zależności
        run: |
          pip install pandas
          pip install matplotlib seaborn numpy

      - name: Create required directories
        run: |
          mkdir -p data aggregated figures
          chmod 777 data aggregated figures
          echo "Created directories with permissions:"
          ls -la

      - name: Sprawdź dane wejściowe
        run: |
          echo "Contents of data directory:"
          ls -la data/
          echo -e "\nChecking Python environment:"
          python --version
          pip list

      - name: Uruchom agregację danych
        run: |
          echo "Running aggregation script..."
          python -u aggregate.py  # -u for unbuffered output
          
          echo -e "\nChecking if files were created:"
          echo "Aggregated directory contents:"
          ls -la aggregated/
          echo -e "\nFigures directory contents:"
          ls -la figures/
          
          if [ ! "$(ls -A aggregated/)" ]; then
            echo "Warning: No files in aggregated directory!"
            echo "Checking last month's data files:"
            find data -type f -name "*.csv" -exec ls -la {} \;
          fi

      # Files are already in their correct directories from aggregate.py and visualization.py

      - name: Konfiguracja GIT
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Pobranie i przełączenie na gałąź 'data-archive'
        run: |
          # Pobranie wszystkich gałęzi
          git fetch --all
          
          # Sprawdzenie, czy gałąź istnieje na GitHubie
          if git show-ref --quiet refs/remotes/origin/data-archive; then
            echo "Gałąź data-archive istnieje, przełączam się na nią."
            git checkout data-archive
          else
            echo "Gałąź data-archive nie istnieje, tworzę nową."
            git checkout -b data-archive
            git push origin data-archive  # Utworzenie nowej gałęzi na GitHubie
          fi

      - name: Commit i push zmian do 'data-archive'
        run: |
          git add aggregated/ figures/
          
          if git diff --staged --quiet; then
            echo "Brak nowych zmian do commitowania."
            exit 0
          fi
          
          git commit -m "Dodanie zbiorczych plików CSV i wykresów: $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin data-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload zbiorczych plików CSV i wykresów jako artefakt
        uses: actions/upload-artifact@v4
        with:
          name: aggregated-csv
          path: aggregated/*.csv
      - uses: actions/upload-artifact@v4
        with:
          name: figures
          path: figures/*.png
