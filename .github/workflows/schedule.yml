name: Scheduled Data Fetch

on:
  schedule:
    # GitHub Actions używa strefy czasowej UTC.
    # Jeśli chcesz np. aby zadanie uruchamiało się o 06:00, 14:00 i 22:00 czasu lokalnego,
    # przelicz te godziny na UTC.
    # Przykładowo, jeśli jesteś w strefie UTC+0, to harmonogram może wyglądać tak:
    - cron: '0 6 * * *'
    - cron: '0 14 * * *'
    - cron: '0 22 * * *'
  # Dla testów możesz dodać także ręczne uruchamianie:
  workflow_dispatch:

jobs:
  run-data-fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repozytorium
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Pełna historia

      - name: Ustawienie środowiska Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Instalacja zależności
        run: |
          python -m pip install --upgrade pip
          pip install requests schedule

      - name: Uruchomienie skryptu
        run: python main.py

      - name: Przeniesienie CSV do folderu 'data'
        run: |
          mkdir -p data
          mv stacja_*.csv data/ || echo "Brak plików CSV do przeniesienia"

      - name: Konfiguracja GIT
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Pobranie i przełączenie na gałąź 'data-archive'
        run: |
          # Pobranie wszystkich gałęzi
          git fetch --all
          
          # Sprawdzenie, czy gałąź istnieje na GitHubie
          if git show-ref --quiet refs/remotes/origin/data-archive; then
            echo "Gałąź data-archive istnieje, przełączam się na nią."
            git checkout data-archive
          else
            echo "Gałąź data-archive nie istnieje, tworzę nową."
            git checkout -b data-archive
            git push origin data-archive  # Utworzenie nowej gałęzi na GitHubie
          fi

      - name: Commit i push zmian do 'data-archive'
        run: |
          git add data/
          
          if git diff --staged --quiet; then
            echo "Brak nowych zmian do commitowania."
            exit 0
          fi
          
          git commit -m "Dodanie plików CSV: $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin data-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload plików CSV jako artefakt
        uses: actions/upload-artifact@v4
        with:
          name: csv-data
          path: data/*.csv
