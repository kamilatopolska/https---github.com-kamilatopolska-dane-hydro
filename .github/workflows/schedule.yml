name: Scheduled Data Fetch

on:
  schedule:
    # GitHub Actions używa strefy czasowej UTC.
    # Jeśli chcesz np. aby zadanie uruchamiało się o 06:00, 14:00 i 22:00 czasu lokalnego,
    # przelicz te godziny na UTC.
    # Przykładowo, jeśli jesteś w strefie UTC+0, to harmonogram może wyglądać tak:
    - cron: '0 6 * * *'
    - cron: '0 14 * * *'
    - cron: '0 22 * * *'
  # Dla testów możesz dodać także ręczne uruchamianie:
  workflow_dispatch:

jobs:
  run-data-fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repozytorium
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Konieczne, aby mieć pełną historię i móc commitować

      - name: Ustawienie środowiska Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Instalacja zależności
        run: |
          python -m pip install --upgrade pip
          pip install requests schedule

      - name: Uruchomienie skryptu
        run: python main.py

      - name: Przeniesienie CSV do folderu 'data' i commit do gałęzi data-archive
        run: |
          # Utwórz folder 'data' jeśli nie istnieje
          mkdir -p data
          # Przenieś wszystkie pliki CSV do folderu 'data'
          mv stacja_*.csv data/ || echo "Brak plików CSV do przeniesienia"
          
          # Skonfiguruj dane użytkownika dla commitu
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Dodaj pliki z folderu 'data'
          git add data/
          
          # Sprawdź, czy są zmiany do zatwierdzenia
          if ! git diff-index --quiet HEAD --; then
            # Commituj zmiany
            git commit -m "Dodanie plików CSV: $(date +'%Y-%m-%d %H:%M:%S')"
            # Pushuj do gałęzi data-archive (jeśli gałąź nie istnieje, zostanie utworzona)
            git push origin HEAD:data-archive
          else
            echo "Brak nowych zmian do commitowania"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload plików CSV jako artefakt
        uses: actions/upload-artifact@v4
        with:
          name: csv-data
          path: data/*.csv